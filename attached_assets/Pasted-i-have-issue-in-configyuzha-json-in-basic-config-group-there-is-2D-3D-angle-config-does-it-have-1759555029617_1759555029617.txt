i have issue, in configyuzha.json in basic config group there is 2D | 3D, angle config, does it have any function following this config?
also there are imageTip only while there should be imageTip and baseTip
we dont need angle,
i want you double check layerCore orchestrator and spin pipeline, does it already have correct flow?
report back after your analisis

11:20 am, Oct 04, 2025

Show less

Decided on configuration adjustments
I'll analyze the configuration and check if the angle config is being used, and verify the imageTip/baseTip implementation.


Decided on angle property removal (8 seconds)
Let me check if imageBase is actually being used anywhere:


Executed rg -C 2 -n imageBase .

Determined unused image properties
Analysis Report: Configuration & Flow Issues
I've completed a thorough analysis of the configuration and layer system. Here are my findings:

Issue 1: angle Property - COMPLETELY UNUSED ❌
Finding:

The angle property exists in ConfigYuzha.json and LayerConfigEntry type
It is NEVER used anywhere in the codebase
No function reads or applies this value
Evidence:

"angle": null,  // ← This does nothing
Conclusion: The angle config is dead code and should be removed.

Issue 2: imageTip vs imageBase - MISUNDERSTANDING ⚠️
Your concern: "There should be imageTip and baseTip"

Actually: The system is designed differently:

Config has: Only imageTip (the angle in degrees)
Code calculates: Both imageTip AND imageBase automatically
How it works:

// Config: imageTip: 90 (just an angle)
const tipAngle = entry.imageTip ?? 90;
// Code automatically calculates BOTH points:
computeImageMapping(dimensions, tipAngle) returns {
  imageTip: { x, y },     // Point at tipAngle direction
  imageBase: { x, y },    // Point at tipAngle + 180° (opposite)
  imageCenter: { x, y }
}
BUT HERE'S THE PROBLEM:

imageTip and imageBase are calculated but NEVER used ❌
Only imageCenter is actually used (as default spin center)
The tip and base calculations are dead code
Issue 3: LayerCore Orchestrator Flow - CORRECT ✅
prepareLayer() flow:

1. resolveAssetPath(imageId) → get asset path
2. resolveAssetUrl(path) → convert to URL
3. compute2DTransform() → calculate position & scale
4. getImageDimensions() → load image, get size
5. computeImageMapping() → calculate tip/base/center
6. Return UniversalLayerData with all mapping
Flow is correct, but includes unused calculations.

Issue 4: Spin Pipeline Flow - CORRECT ✅
createSpinProcessor() flow:

1. Read spinCenter, spinSpeed, spinDirection from config
2. Validate spinCenter (0-100%)
3. On each frame:
   - Calculate elapsed time
   - Compute rotation = (elapsed * spinSpeed) % 360
   - Apply direction (cw/ccw)
   - Convert spinCenter % to pixels (or use imageCenter default)
   - Return enhanced data with currentRotation
The spin pipeline correctly:

Uses imageMapping.imageCenter as default rotation point ✅
Allows custom spinCenter override ✅
Calculates time-based rotation ✅
Summary of Issues:
Config Item	Status	Issue
angle	❌ Unused	Should be removed from config & types
imageTip	⚠️ Half-used	Angle is used to calculate mapping, but resulting tip/base points are never used
imageBase	❌ Dead code	Calculated but never referenced
Spin pipeline	✅ Working	Correctly uses imageCenter as default spin point
Recommendation:

Remove angle from config (unused)
Consider removing imageTip/imageBase calculation since they're not used (only keep imageCenter)
Or document what imageTip/imageBase are for if they're meant for future features
The core system works correctly, but there's dead code that should be cleaned up.